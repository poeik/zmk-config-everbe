#include "keys_ch.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Defines what key goes where
// &kp = keypress
// &mo = momentary layer, means it activates a specific layer when we hold down this key
//    &mo 1 = selects into the next layer
// &bt = selects a different bluetooth device
/ {
    combos {
        compatible = "zmk,combos";
        l_combo_lalt{
            timeout-ms = <50>;
            key-positions = <15 29>;
            bindings = <&kp LALT>;
        };
        l_combo_lgui {
            timeout-ms = <50>;
            key-positions = <16 30>;
            bindings = <&kp LGUI>;
        };
        l_combo_lctrl {
            timeout-ms = <50>;
            key-positions = <17 31>;
            bindings = <&kp LCTRL>;
        };

        r_combo_rctrl {
            timeout-ms = <50>;
            key-positions = <20 34>;
            bindings = <&kp RCTRL>;
        };
        r_combo_rgui{
            timeout-ms = <50>;
            key-positions = <21 35>;
            bindings = <&kp RGUI>;
        };
        r_combo_ralt {
            timeout-ms = <50>;
            key-positions = <22 36>;
            bindings = <&kp RALT>;
        };
    };
};
/ {
      behaviors {
          hm: mod_taps {
              compatible = "zmk,behavior-hold-tap";
              #binding-cells = <2>;
              tapping-term-ms = <175>;
              quick-tap-ms = <0>;
              flavor = "hold-preferred";
              bindings = <&kp>, <&kp>;               
          };
          mk: mom_key {
              compatible = "zmk,behavior-hold-tap";
              #binding-cells = <2>;
              tapping-term-ms = <175>;
              quick-tap-ms = <0>;
              flavor = "hold-preferred";
              bindings = <&mo>, <&kp>;               
          };
      };                                               

      keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
       &none   &kp N1   &kp N2 &kp N3 &kp N4            &kp N5                  &kp N6      &kp N7           &kp N8    &kp N9  &kp N0      &kp CH_QUOT
&none  &none   &kp Q    &kp W  &kp E  &kp R             &kp T                   &kp CH_Z    &kp U            &kp I     &kp O   &kp P       &kp CH_CIRC &kp BSPC
&none  &kp ESC &kp A    &kp S  &kp D  &kp F             &kp G                   &kp H       &kp J            &kp K     &kp L   &kp CH_DIAE &kp CH_DLR  &none
&none  &none   &kp CH_Y &kp X  &kp C  &kp V             &kp B                   &kp N       &kp M            &kp COMMA &kp DOT &kp CH_MINS &kp CH_LABK &none
       &none   &none    &none         &hm LSHIFT SPACE  &mk 2 TAB               &mk 1 BSPC  &hm RSHIFT ENTER           &none   &none       &none
            >;
        };

        lower_layer {
            bindings = <
             &trans &kp F1 &kp F2 &kp F3 &kp F4 &kp F5                          &kp F6   &kp F7   &kp F8 &kp F9    &kp F10 &bt BT_CLR_ALL
&bt BT_SEL 0 &trans &trans &trans &trans &trans &trans                          &trans   &trans   &trans &trans    &trans  &trans         &trans
&bt BT_SEL 1 &trans &trans &trans &trans &trans &trans                          &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans  &trans         &trans
&bt BT_SEL 2 &trans &trans &trans &trans &trans &trans                          &trans   &trans   &trans &trans    &trans  &trans         &trans
             &trans &trans &trans        &trans &trans                          &trans   &trans          &trans    &trans  &trans
            >;
        };
        upper_layer {
            bindings = <
        &trans &trans &trans &trans &trans &trans                               &trans &trans      &trans      &trans &trans &trans
&trans  &trans &trans &kp N7 &kp N8 &kp N9 &kp N0                               &trans &kp CH_LBRC &kp CH_RBRC &trans &trans &trans &trans
&trans  &trans &trans &kp N4 &kp N5 &kp N6 &trans                               &trans &kp CH_LPRN &kp CH_RPRN &trans &trans &trans &trans
&trans  &trans &trans &kp N1 &kp N2 &kp N3 &trans                               &trans &kp CH_LCBR &kp CH_RCBR &trans &trans &trans &trans
        &trans &trans &trans        &trans &trans                               &trans &trans      &trans      &trans &trans
            >;
        };
    };
};

