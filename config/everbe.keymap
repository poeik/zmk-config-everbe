#include "keys_ch.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Defines what key goes where
// &kp = keypress
// &mo = momentary layer, means it activates a specific layer when we hold down this key
//    &mo 1 = selects into the next layer
// &bt = selects a different bluetooth device

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------
            // |   `  |  1  |  2  |  3  |  4  |  5  |     |  6  |  7  |  8  |  9  |  0  | BKSP |
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |     |  Z  |  U  |  I  |  O  |  P  |  ü   |
            // | CAPS |  A  |  S  |  D  |  F  |  G  |     |  H  |  J  |  K  |  L  |  ¨  |  ENT |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |     |  N  |  M  |  ,  |  .  |  .  | APOS |
            // | CTRL | ALT | GUI | SPC | SPC | SPC |     | SPC | LOW |LARW |DARW |UARW | RARW |

            bindings = <
&kp ESC    &kp N1     &kp N2    &kp N3    &kp N4  &kp N5                     &kp N6           &kp N7  &kp N8     &kp N9    &kp N0       &kp CH_QUOT
&kp A      &kp TAB    &kp Q     &kp W     &kp E   &kp R      &kp T           &kp CH_Z         &kp U   &kp I      &kp O     &kp P        &kp CH_GRV   &kp BSPC
&kp A      &kp LCTRL  &kp A     &kp S     &kp D   &kp F      &kp G           &kp H            &kp J   &kp K      &kp L     &kp CH_DIAE  &kp CH_DLR   &kp ENTER
&kp LSHFT  &kp LSHFT  &kp CH_Y  &kp X     &kp C   &kp V      &kp B           &kp N            &kp M   &kp COMMA  &kp DOT   &kp CH_MINS  &kp CH_CIRC  &kp RSHIFT
           &kp LCTRL  &kp LALT  &kp LGUI          &kp SPACE  &kp LEFT_SHIFT  &kp RIGHT_SHIFT  &mo 1              &kp RGUI  &kp RALT     &kp RCTRL
            >;
        };

        lower_layer {
            bindings = <
&trans        &trans        &trans        &trans     &trans        &trans                     &trans    &trans          &trans  &trans     &trans  &bt BT_CLR_ALL
&bt BT_SEL 0  &trans        &trans        &trans     &kp LA(LBRC)  &kp LA(RBRC)  &trans       &trans    &trans          &trans  &trans     &trans  &trans          &trans
&bt BT_SEL 1  &kp LA(LBKT)  &kp LA(RBKT)  &kp LCTRL  &kp LS(LPAR)  &kp LS(RPAR)  &kp CH_RCBR  &kp LEFT  &kp DOWN_ARROW  &kp UP  &kp RIGHT  &trans  &trans          &trans
&bt BT_SEL 2  &trans        &trans        &trans     &kp LA(LBKT)  &kp LA(RBKT)  &trans       &trans    &trans          &trans  &trans     &trans  &trans          &trans
              &trans        &trans        &trans                   &trans        &trans       &trans    &trans                  &trans     &trans  &trans
            >;
        };
    };
};

// &bt BT_SEL 1  &kp trans  &kp CH_LPRN  &kp CH_RPRN  &kp CH_RBRC  &kp CH_LCBR  &kp CH_RCBR  &kp LEFT  &kp DOWN_ARROW  &kp UP  &kp RIGHT  &trans  &trans          &trans
